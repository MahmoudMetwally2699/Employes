{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mahmoud\\\\Downloads\\\\Walk-in-System-main\\\\Walk-in-System-main\\\\frontend\\\\src\\\\component\\\\Logout.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { SetPopupContext } from \"../App\";\n\nconst Logout = props => {\n  _s();\n\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"type\");\n    setPopup({\n      open: true,\n      severity: \"success\",\n      message: \"Logged out successfully\"\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Logout, \"fbqrxKNidJvQeYrxA7pxpVBmByk=\");\n\n_c = Logout;\nexport default Logout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"sources":["C:/Users/Mahmoud/Downloads/Walk-in-System-main/Walk-in-System-main/frontend/src/component/Logout.js"],"names":["useEffect","useContext","Redirect","SetPopupContext","Logout","props","setPopup","localStorage","removeItem","open","severity","message"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAASC,eAAT,QAAgC,QAAhC;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMC,QAAQ,GAAGL,UAAU,CAACE,eAAD,CAA3B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,IAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,IADC;AAEPC,MAAAA,QAAQ,EAAE,SAFH;AAGPC,MAAAA,OAAO,EAAE;AAHF,KAAD,CAAR;AAKD,GARQ,EAQN,EARM,CAAT;AASA,sBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAZD;;GAAMP,M;;KAAAA,M;AAcN,eAAeA,MAAf","sourcesContent":["import { useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { SetPopupContext } from \"../App\";\n\nconst Logout = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"type\");\n    setPopup({\n      open: true,\n      severity: \"success\",\n      message: \"Logged out successfully\",\n    });\n  }, []);\n  return <Redirect to=\"/\" />;\n};\n\nexport default Logout;\n"]},"metadata":{},"sourceType":"module"}