{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Employes\\\\frontend\\\\src\\\\component\\\\Signup.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { Grid, TextField, Button, Typography, makeStyles, Paper, MenuItem, Input } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport ChipInput from \"material-ui-chip-input\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport { SetPopupContext } from \"../App\";\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\nconst useStyles = makeStyles(theme => ({\n  body: {\n    padding: \"60px 60px\",\n    margin: \"10px 0px\",\n    fontFamily: \"Roboto\"\n  },\n  inputBox: {\n    width: \"600px\"\n  },\n  submitButton: {\n    width: \"400px\"\n  }\n}));\n\nconst MultifieldInput = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    education,\n    setEducation\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [education.map((obj, key) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      className: classes.inputBox,\n      style: {\n        paddingLeft: 0,\n        paddingRight: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: `Institution Name #${key + 1}`,\n          value: education[key].institutionName,\n          onChange: event => {\n            const newEdu = [...education];\n            newEdu[key].institutionName = event.target.value;\n            setEducation(newEdu);\n          },\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Start Year\",\n          value: obj.startYear,\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: event => {\n            const newEdu = [...education];\n            newEdu[key].startYear = event.target.value;\n            setEducation(newEdu);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"End Year\",\n          value: obj.endYear,\n          variant: \"outlined\",\n          type: \"number\",\n          onChange: event => {\n            const newEdu = [...education];\n            newEdu[key].endYear = event.target.value;\n            setEducation(newEdu);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => setEducation([...education, {\n          institutionName: \"\",\n          startYear: \"\",\n          endYear: \"\"\n        }]),\n        className: classes.inputBox,\n        children: \"Add another institution details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MultifieldInput, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = MultifieldInput;\n\nconst Login = props => {\n  _s2();\n\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n  const [loggedin, setLoggedin] = useState(isAuth());\n  const [signupDetails, setSignupDetails] = useState({\n    type: \"applicant\",\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    education: [],\n    skills: [],\n    resume: \"\",\n    profile: \"\",\n    bio: \"\",\n    contactNumber: \"\"\n  });\n  const [phone, setPhone] = useState(\"\");\n  const [education, setEducation] = useState([{\n    institutionName: \"\",\n    startYear: \"\",\n    endYear: \"\"\n  }]);\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\"\n    },\n    password: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\"\n    },\n    name: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\"\n    }\n  });\n\n  const handleInput = (key, value) => {\n    setSignupDetails({ ...signupDetails,\n      [key]: value\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({ ...inputErrorHandler,\n      [key]: {\n        required: true,\n        untouched: false,\n        error: status,\n        message: message\n      }\n    });\n  };\n\n  const handleLogin = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach(obj => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n    education.filter(obj => obj.institutionName.trim() !== \"\").map(obj => {\n      if (obj[\"endYear\"] === \"\") {\n        delete obj[\"endYear\"];\n      }\n\n      return obj;\n    });\n\n    for (var i = 0; i < education.length; i++) {\n      education[i].startYear = +education[i].startYear;\n      education[i].endYear = +education[i].endYear;\n    }\n\n    let updatedDetails = { ...signupDetails,\n      education: education\n    };\n    setSignupDetails(updatedDetails);\n    const verified = !Object.keys(tmpErrorHandler).some(obj => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    if (verified) {\n      axios.post(apiList.signup, updatedDetails).then(response => {\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"type\", response.data.type);\n        setLoggedin(isAuth());\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: \"Logged in successfully\"\n        });\n        console.log(response);\n      }).catch(err => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message\n        });\n        console.log(err.response);\n      });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\"\n      });\n    }\n  };\n\n  const handleLoginRecruiter = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach(obj => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n    let updatedDetails = { ...signupDetails\n    };\n\n    if (phone !== \"\") {\n      updatedDetails = { ...signupDetails,\n        contactNumber: `+${phone}`\n      };\n    } else {\n      updatedDetails = { ...signupDetails,\n        contactNumber: \"\"\n      };\n    }\n\n    setSignupDetails(updatedDetails);\n    const verified = !Object.keys(tmpErrorHandler).some(obj => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    if (verified) {\n      axios.post(apiList.signup, updatedDetails).then(response => {\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"type\", response.data.type);\n        setLoggedin(isAuth());\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: \"Logged in successfully\"\n        });\n        console.log(response);\n      }).catch(err => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message\n        });\n        console.log(err.response);\n      });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\"\n      });\n    }\n  };\n\n  return loggedin ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    className: classes.body,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      spacing: 4,\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h2\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          label: \"Category\",\n          variant: \"outlined\",\n          className: classes.inputBox,\n          value: signupDetails.type,\n          onChange: event => {\n            handleInput(\"type\", event.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"applicant\",\n            children: \"Applicant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"recruiter\",\n            children: \"Recruiter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Name\",\n          value: signupDetails.name,\n          onChange: event => handleInput(\"name\", event.target.value),\n          className: classes.inputBox,\n          error: inputErrorHandler.name.error,\n          helperText: inputErrorHandler.name.message,\n          onBlur: event => {\n            if (event.target.value === \"\") {\n              handleInputError(\"name\", true, \"Name is required\");\n            } else {\n              handleInputError(\"name\", false, \"\");\n            }\n          },\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(EmailInput, {\n          label: \"Email\",\n          value: signupDetails.email,\n          onChange: event => handleInput(\"email\", event.target.value),\n          inputErrorHandler: inputErrorHandler,\n          handleInputError: handleInputError,\n          className: classes.inputBox,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(PasswordInput, {\n          label: \"Password\",\n          value: signupDetails.password,\n          onChange: event => handleInput(\"password\", event.target.value),\n          className: classes.inputBox,\n          error: inputErrorHandler.password.error,\n          helperText: inputErrorHandler.password.message,\n          onBlur: event => {\n            if (event.target.value === \"\") {\n              handleInputError(\"password\", true, \"Password is required\");\n            } else {\n              handleInputError(\"password\", false, \"\");\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), signupDetails.type === \"applicant\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MultifieldInput, {\n          education: education,\n          setEducation: setEducation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(ChipInput, {\n            className: classes.inputBox,\n            label: \"Skills\",\n            variant: \"outlined\",\n            helperText: \"Press enter to add skills\",\n            onChange: chips => setSignupDetails({ ...signupDetails,\n              skills: chips\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(FileUploadInput, {\n            className: classes.inputBox,\n            label: \"Resume (.pdf)\",\n            icon: /*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 23\n            }, this) // value={files.resume}\n            // onChange={(event) =>\n            //   setFiles({\n            //     ...files,\n            //     resume: event.target.files[0],\n            //   })\n            // }\n            ,\n            uploadTo: apiList.uploadResume,\n            handleInput: handleInput,\n            identifier: \"resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(FileUploadInput, {\n            className: classes.inputBox,\n            label: \"Profile Photo (.jpg/.png)\",\n            icon: /*#__PURE__*/_jsxDEV(FaceIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 23\n            }, this) // value={files.profileImage}\n            // onChange={(event) =>\n            //   setFiles({\n            //     ...files,\n            //     profileImage: event.target.files[0],\n            //   })\n            // }\n            ,\n            uploadTo: apiList.uploadProfileImage,\n            handleInput: handleInput,\n            identifier: \"profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Bio (upto 250 words)\",\n            multiline: true,\n            rows: 8,\n            style: {\n              width: \"100%\"\n            },\n            variant: \"outlined\",\n            value: signupDetails.bio,\n            onChange: event => {\n              if (event.target.value.split(\" \").filter(function (n) {\n                return n != \"\";\n              }).length <= 250) {\n                handleInput(\"bio\", event.target.value);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(PhoneInput, {\n            country: \"in\",\n            value: phone,\n            onChange: phone => setPhone(phone)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            signupDetails.type === \"applicant\" ? handleLogin() : handleLoginRecruiter();\n          },\n          className: classes.submitButton,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Login, \"yB2bsEWPu2AjasTCduOX4/PFa9c=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Login;\nexport default Login; // {/* <Grid item>\n//           <PasswordInput\n//             label=\"Re-enter Password\"\n//             value={signupDetails.tmpPassword}\n//             onChange={(event) => handleInput(\"tmpPassword\", event.target.value)}\n//             className={classes.inputBox}\n//             labelWidth={140}\n//             helperText={inputErrorHandler.tmpPassword.message}\n//             error={inputErrorHandler.tmpPassword.error}\n//             onBlur={(event) => {\n//               if (event.target.value !== signupDetails.password) {\n//                 handleInputError(\n//                   \"tmpPassword\",\n//                   true,\n//                   \"Passwords are not same.\"\n//                 );\n//               }\n//             }}\n//           />\n//         </Grid> */}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MultifieldInput\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["D:/Employes/frontend/src/component/Signup.js"],"names":["useState","useContext","Grid","TextField","Button","Typography","makeStyles","Paper","MenuItem","Input","axios","Redirect","ChipInput","DescriptionIcon","FaceIcon","PhoneInput","PasswordInput","EmailInput","FileUploadInput","SetPopupContext","apiList","isAuth","useStyles","theme","body","padding","margin","fontFamily","inputBox","width","submitButton","MultifieldInput","props","classes","education","setEducation","map","obj","key","paddingLeft","paddingRight","institutionName","event","newEdu","target","value","startYear","endYear","Login","setPopup","loggedin","setLoggedin","signupDetails","setSignupDetails","type","email","password","name","skills","resume","profile","bio","contactNumber","phone","setPhone","inputErrorHandler","setInputErrorHandler","untouched","required","error","message","handleInput","handleInputError","status","handleLogin","tmpErrorHandler","Object","keys","forEach","toUpperCase","substr","filter","trim","i","length","updatedDetails","verified","some","post","signup","then","response","localStorage","setItem","data","token","open","severity","console","log","catch","err","handleLoginRecruiter","chips","uploadResume","uploadProfileImage","split","n"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n  Paper,\n  MenuItem,\n  Input,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport ChipInput from \"material-ui-chip-input\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\n\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n    margin: \"10px 0px\",\n    fontFamily: \"Roboto\",\n  },\n  inputBox: {\n    width: \"600px\",\n  },\n  submitButton: {\n    width: \"400px\",\n  },\n}));\n\nconst MultifieldInput = (props) => {\n  const classes = useStyles();\n  const { education, setEducation } = props;\n\n  return (\n    <>\n      {education.map((obj, key) => (\n        <Grid\n          item\n          container\n          className={classes.inputBox}\n          key={key}\n          style={{ paddingLeft: 0, paddingRight: 0 }}\n        >\n          <Grid item xs={6}>\n            <TextField\n              label={`Institution Name #${key + 1}`}\n              value={education[key].institutionName}\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].institutionName = event.target.value;\n                setEducation(newEdu);\n              }}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"Start Year\"\n              value={obj.startYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].startYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"End Year\"\n              value={obj.endYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].endYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n        </Grid>\n      ))}\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>\n            setEducation([\n              ...education,\n              {\n                institutionName: \"\",\n                startYear: \"\",\n                endYear: \"\",\n              },\n            ])\n          }\n          className={classes.inputBox}\n        >\n          Add another institution details\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [signupDetails, setSignupDetails] = useState({\n    type: \"applicant\",\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    education: [],\n    skills: [],\n    resume: \"\",\n    profile: \"\",\n    bio: \"\",\n    contactNumber: \"\",\n  });\n\n  const [phone, setPhone] = useState(\"\");\n\n  const [education, setEducation] = useState([\n    {\n      institutionName: \"\",\n      startYear: \"\",\n      endYear: \"\",\n    },\n  ]);\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    password: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    name: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setSignupDetails({\n      ...signupDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        required: true,\n        untouched: false,\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    education\n      .filter((obj) => obj.institutionName.trim() !== \"\")\n      .map((obj) => {\n        if (obj[\"endYear\"] === \"\") {\n          delete obj[\"endYear\"];\n        }\n        return obj;\n      });\n    for (var i = 0; i < education.length; i++) {\n      education[i].startYear = +education[i].startYear;\n      education[i].endYear = +education[i].endYear;\n    }\n\n    let updatedDetails = {\n      ...signupDetails,\n      education: education,\n    };\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  const handleLoginRecruiter = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    let updatedDetails = {\n      ...signupDetails,\n    };\n    if (phone !== \"\") {\n      updatedDetails = {\n        ...signupDetails,\n        contactNumber: `+${phone}`,\n      };\n    } else {\n      updatedDetails = {\n        ...signupDetails,\n        contactNumber: \"\",\n      };\n    }\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Paper elevation={3} className={classes.body}>\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h3\" component=\"h2\">\n            Signup\n          </Typography>\n        </Grid>\n        <Grid item>\n          <TextField\n            select\n            label=\"Category\"\n            variant=\"outlined\"\n            className={classes.inputBox}\n            value={signupDetails.type}\n            onChange={(event) => {\n              handleInput(\"type\", event.target.value);\n            }}\n          >\n            <MenuItem value=\"applicant\">Applicant</MenuItem>\n            <MenuItem value=\"recruiter\">Recruiter</MenuItem>\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            label=\"Name\"\n            value={signupDetails.name}\n            onChange={(event) => handleInput(\"name\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.name.error}\n            helperText={inputErrorHandler.name.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"name\", true, \"Name is required\");\n              } else {\n                handleInputError(\"name\", false, \"\");\n              }\n            }}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item>\n          <EmailInput\n            label=\"Email\"\n            value={signupDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n            required={true}\n          />\n        </Grid>\n        <Grid item>\n          <PasswordInput\n            label=\"Password\"\n            value={signupDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.password.error}\n            helperText={inputErrorHandler.password.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"password\", true, \"Password is required\");\n              } else {\n                handleInputError(\"password\", false, \"\");\n              }\n            }}\n          />\n        </Grid>\n        {signupDetails.type === \"applicant\" ? (\n          <>\n            <MultifieldInput\n              education={education}\n              setEducation={setEducation}\n            />\n            <Grid item>\n              <ChipInput\n                className={classes.inputBox}\n                label=\"Skills\"\n                variant=\"outlined\"\n                helperText=\"Press enter to add skills\"\n                onChange={(chips) =>\n                  setSignupDetails({ ...signupDetails, skills: chips })\n                }\n              />\n            </Grid>\n            <Grid item>\n              <FileUploadInput\n                className={classes.inputBox}\n                label=\"Resume (.pdf)\"\n                icon={<DescriptionIcon />}\n                // value={files.resume}\n                // onChange={(event) =>\n                //   setFiles({\n                //     ...files,\n                //     resume: event.target.files[0],\n                //   })\n                // }\n                uploadTo={apiList.uploadResume}\n                handleInput={handleInput}\n                identifier={\"resume\"}\n              />\n            </Grid>\n            <Grid item>\n              <FileUploadInput\n                className={classes.inputBox}\n                label=\"Profile Photo (.jpg/.png)\"\n                icon={<FaceIcon />}\n                // value={files.profileImage}\n                // onChange={(event) =>\n                //   setFiles({\n                //     ...files,\n                //     profileImage: event.target.files[0],\n                //   })\n                // }\n                uploadTo={apiList.uploadProfileImage}\n                handleInput={handleInput}\n                identifier={\"profile\"}\n              />\n            </Grid>\n          </>\n        ) : (\n          <>\n            <Grid item style={{ width: \"100%\" }}>\n              <TextField\n                label=\"Bio (upto 250 words)\"\n                multiline\n                rows={8}\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={signupDetails.bio}\n                onChange={(event) => {\n                  if (\n                    event.target.value.split(\" \").filter(function (n) {\n                      return n != \"\";\n                    }).length <= 250\n                  ) {\n                    handleInput(\"bio\", event.target.value);\n                  }\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <PhoneInput\n                country={\"in\"}\n                value={phone}\n                onChange={(phone) => setPhone(phone)}\n              />\n            </Grid>\n          </>\n        )}\n\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              signupDetails.type === \"applicant\"\n                ? handleLogin()\n                : handleLoginRecruiter();\n            }}\n            className={classes.submitButton}\n          >\n            Signup\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Login;\n\n// {/* <Grid item>\n//           <PasswordInput\n//             label=\"Re-enter Password\"\n//             value={signupDetails.tmpPassword}\n//             onChange={(event) => handleInput(\"tmpPassword\", event.target.value)}\n//             className={classes.inputBox}\n//             labelWidth={140}\n//             helperText={inputErrorHandler.tmpPassword.message}\n//             error={inputErrorHandler.tmpPassword.error}\n//             onBlur={(event) => {\n//               if (event.target.value !== signupDetails.password) {\n//                 handleInputError(\n//                   \"tmpPassword\",\n//                   true,\n//                   \"Passwords are not same.\"\n//                 );\n//               }\n//             }}\n//           />\n//         </Grid> */}\n"]},"metadata":{},"sourceType":"module"}